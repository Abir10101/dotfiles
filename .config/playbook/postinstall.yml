- hosts: localhost
  tasks:
    - name: Install required packages
      become: yes
      command: xbps-install "{{item}}"
      loop:
        - qtile
        - pavucontrol
        - btop
        - fuse
        - stow
        - xsel
        - xfce4-screenshooter
        - podman
        - podman-compose
        - gst-plugins-bad1
        - openvpn
        - gcc
        - git
        - NetworkManager
        - ddcutil
        - slock
        - bleachbit
        - wget
        - xinit
        - xorg-minimal
        - xorg-server
        - xcb-util-image
        - dmenu
        - sxiv
        - unzip
        - xdg-utils
        - noto-fonts-ttf
        - picom
        - python3-psutil
        - xrandr
        - pipewire
        - xwallpaper
        - curl
        - mesa
        - mesa-dri
        - linux-firmware-intel
        - dbus

    - name: Stow dotfiles
      shell: |
        mkdir -p "{{ ansible_env.HOME }}/.librewolf"
        stow --adopt .
      args:
        chdir: "{{ ansible_env.HOME }}/dotfiles"

    - name: Download and install AM
      become: yes
      shell: |
        wget https://raw.githubusercontent.com/ivan-hc/AM/main/INSTALL -O /tmp/AM-INSTALL &&
        chmod a+x /tmp/AM-INSTALL &&
        /tmp/AM-INSTALL &&
        rm /tmp/AM-INSTALL
      args:
        creates: /usr/local/bin/am
    - name: Install AM packages
      command: am -i "{{item}}"
      loop:
        - bruno
        - helix
        - librewolf
        - localsend
        - obs-studio
        - smplayer
        - yazi
        - zen-browser

    - name: Change screen brightness script
      become: yes
      command: ln -s {{ ansible_env.HOME }}/.local/bin/setbrightness.sh /usr/local/bin/setbrightness

    - name: Start dbus
      become: yes
      ansible.builtin.file:
        src: /etc/sv/dbus
        dest: /var/service/dbus
        state: link
      service:
        name: dbus
        state: started

    - name: Start NetworkManager
      become: yes
      ansible.builtin.file:
        src: /etc/sv/NetworkManager
        dest: /var/service/NetworkManager
        state: link
      service:
        name: NetworkManager
        state: started

    - name: Configure default font
      become: yes
      shell: |
        ln -s ~/.config/fontconfig/conf.d/52-my-default-fonts.conf /etc/fonts/conf.d/52-my-default-fonts.conf &&
        fc-cache -f

    - name: Run zzz, reboot, poweroff without root password
      become: yes
      ansible.builtin.lineinfile:
        path: /etc/sudoers
        line: '{{ lookup("ansible.builtin.env", "USER") }} ALL=(ALL) NOPASSWD: /usr/bin/zzz, /usr/bin/reboot, /usr/bin/poweroff'
        state: present
        validate: '/usr/sbin/visudo -cf %s'

    - name: Setup for removing unused firmware packages
      become: yes
      shell: |
        echo "ignorepkg=linux-firmware-amd" > /etc/xbps.d/10-ignore.conf &&
        echo "ignorepkg=linux-firmware-nvidia" > /etc/xbps.d/10-ignore.conf

    - name: Remove unwanted packages
      become: yes
      command: xbps-remove -Ry "{{item}}"
      loop:
        - linux-firmware-amd
        - linux-firmware-nvidia
        - geoclue2
        - python3-devel
        - python3-botocore
        - python3-virtualenv
        - pcmanfm
        - python3-pip
        - ImageMagick
        - upower
        - ModemManager
        - libmbim
        - plymouth
        - smartmontools
        - pcsc-lite
        - nano
        - fprintd
        - hunspell-en-GB
        - abrt*
        - lightdm
        - lightdm-gtk-greeter
        - cronie
        - gssproxy
